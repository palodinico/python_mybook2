[Site]
http://qiita.com/kaki_k/items/7b178ad39394a031b50d

[Install virtualenv and Django]
01. pip install virtualenv
02. cd {workdir}
03. virtualenv env1
04. cd env1
05. Script\activate
06. pip install django=1.7.1
07. pip freeze -l

[Project initial setting] (p) - pyCharm
01. django-admin startproject mybook2
02. (p) open directory
03. (p) Setting: Editor/File encodings/IDE Encoding = UTF-8
04. (p) Setting: Editor/File encodings/Project Encoding = UTF-8
05. (p) Setting: Project:mybook2/Project Interpreters = [virtualenv's pyhthon.exe]
06. (p) run virtualenv's Script\activate on Terminal
07. (p) Run:Edit Configurations.
        1) Push +.
        2) Add a new item in python.
        3) Script: {virtualenv_dir}\manage.py
        4) Script parameters: runserver 8000
        5) Python interpreter: virtualenv's pyhthon.exe
08. python manage.py migrate
09. python manage.py createsuperuser
10. python manage.py runserver
11. git init, add, initial commit
12. Make a github repository (https://github.com/palodinico/python_mybook2.git)
13. Add a remote by [ git remote add origin https://github.com/palodinico/python_mybook2.git]
14. git push origin master

[Add a new application]
01. python manage.py startapp cms
02. Add this new application in INSTALL_APPS in mybook/settings.py
03. Modify LANGUAGE_CODE='ja' & TIME_ZONE='Asia/Tokyo'
03. Add models in cms/models.py
04. Make a migration file by [python manage.py makemigrations cms]
05. Check the SQL of the migration file by [python manage.py sqlmigrate cms 0001]
06. Exec the migration file by [python manage.py migrate]

[Admin page]
01. http://127.0.0.1:8000/admin/
02. Add cms models to cms/admin.py
    admin.site.register(Book)
    admin.site.register(Impression)
03. Modify ModelAmdmin to cms/admin.py
    ex)
    class BookAmdmin(admin.ModelAdmin):
        list_display = ('id', 'name', ...)
        list_display_links = ('id', 'name', ...)
    admin.site.register(Book, BookAdmin)

[Add bootstrup and jquery files]
01. make dir[mybooks/static]
02. add files to the dir
03. add STATICFILES_DIRS to mybook2/settings.py
    ex)
    STATICFILES_DIRS = (
        os.path.join(BASE_DIR, 'static')
    )
04. pip install django-bootstrap-form
05. add bootstrapform to INSTALLED_APPS in mybook2/settings.py

[Add Django CRUD]
01. make views in cms/views.php
    ex1)
        def book_list(request):
        return HttpResponse(u'書籍の一覧')
    ex2)
        def book_edit(request, book_id=None):
        return HttpResponse(u'書籍の編集')
02. make url scheme
        1) make cms/urls.php
        2) add scheme
            ex) url(r'/^book/$', views.book_list, name="book_list"),
        3) include cms/urls.py from mybook2/urls.py
            ex) url(r'^cms/', include('cms.urls', namespace='cms')),
        4) check the urls by browers
               http://127.0.0.1:8000/cms/book/
               http://127.0.0.1:8000/cms/book/add/
               http://127.0.0.1:8000/cms/book/mod/1/
               http://127.0.0.1:8000/cms/book/del/1/
03. update views in cms/views.py
    ex)
        def book_list(request):
            books = Book.objects.all().order_by('id')
            return render_to_response('cms/book_list.html',
                                      {'book':books},
                                      context_instance=RequestContext(request))
04. make template html at [cms/templates/cms/book_list.html]